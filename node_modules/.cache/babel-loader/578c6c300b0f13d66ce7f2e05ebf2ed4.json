{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\weather\\\\weatherapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Weather from './components/backdata';\nimport Form from './components/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'ccebbbad91d4bf1c0f98844156598b51';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tempreature: \"\",\n      city: \"\",\n      country: \"\",\n      humidity: \"\",\n      description: \"\",\n      error: \"\"\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      console.log(city, country);\n      const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${apiKey}`);\n      const data = await api.json();\n\n      if (city & country) {\n        this.setState({\n          tempreature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          tempreature: \"\",\n          city: \"\",\n          country: \"\",\n          humidity: \"\",\n          description: \"\",\n          error: \"\"\n        });\n      }\n\n      console.log(data);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        getWeather: this.getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/weather/weatherapp/src/App.js"],"names":["React","Component","Weather","Form","apiKey","App","state","tempreature","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","console","log","api","fetch","data","json","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AACA,MAAMC,MAAM,GAAG,kCAAf;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,WAAW,EAAE,EALT;AAMJC,MAAAA,KAAK,EAAE;AANH,KADgB;;AAAA,SASxBC,UATwB,GASX,MAAMC,CAAN,IAAY;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EAAkBC,OAAlB;AACA,YAAMY,GAAG,GAAG,MAAMC,KAAK,CAAE,oDAAmDd,IAAK,MAAKC,OAAQ,UAASL,MAAO,EAAvF,CAAvB;AACA,YAAMmB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AACA,UAAIhB,IAAI,GAAGC,OAAX,EAAoB;AAChB,aAAKgB,QAAL,CAAc;AACVlB,UAAAA,WAAW,EAAEgB,IAAI,CAACG,IAAL,CAAUC,IADb;AAEVnB,UAAAA,IAAI,EAAEe,IAAI,CAACK,IAFD;AAGVnB,UAAAA,OAAO,EAAEc,IAAI,CAACM,GAAL,CAASpB,OAHR;AAIVC,UAAAA,QAAQ,EAAEa,IAAI,CAACG,IAAL,CAAUhB,QAJV;AAKVC,UAAAA,WAAW,EAAEY,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBnB,WALnB;AAMVC,UAAAA,KAAK,EAAE;AANG,SAAd;AAUH,OAXD,MAWO;AACH,aAAKa,QAAL,CAAc;AAEZlB,UAAAA,WAAW,EAAE,EAFD;AAGZC,UAAAA,IAAI,EAAE,EAHM;AAIZC,UAAAA,OAAO,EAAE,EAJG;AAKZC,UAAAA,QAAQ,EAAE,EALE;AAMZC,UAAAA,WAAW,EAAE,EAND;AAOZC,UAAAA,KAAK,EAAE;AAPK,SAAd;AAWH;;AACTO,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACK,KAzCuB;AAAA;;AA2CxBQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,8BAEA,QAAC,IAAD;AAAM,QAAA,UAAU,EAAK,KAAKlB;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAxDuB;;AA2D5B,eAAeR,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Weather from './components/backdata'\nimport Form from './components/form'\nconst apiKey = 'ccebbbad91d4bf1c0f98844156598b51'\n\n\nclass App extends Component {\n    state = {\n        tempreature: \"\",\n        city: \"\",\n        country: \"\",\n        humidity: \"\",\n        description: \"\",\n        error: \"\"\n    }\n    getWeather = async(e) => {\n        e.preventDefault()\n        const city = e.target.elements.city.value\n        const country = e.target.elements.country.value\n        console.log(city, country)\n        const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${apiKey}`)\n        const data = await api.json();\n        if (city & country) {\n            this.setState({\n                tempreature: data.main.temp,\n                city: data.name,\n                country: data.sys.country,\n                humidity: data.main.humidity,\n                description: data.weather[0].description,\n                error: \"\"\n\n\n            })\n        } else {\n            this.setState({\n\n              tempreature: \"\",\n              city: \"\",\n              country: \"\",\n              humidity: \"\",\n              description: \"\",\n              error: \"\"\n\n            })\n\n        }\nconsole.log(data)\n    }\n\n    render() {\n        return (\n            <div className = \"App\" >\n\n            <Form getWeather = { this.getWeather }/>\n            <Weather / >\n\n            </div>\n\n\n        )\n\n\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}